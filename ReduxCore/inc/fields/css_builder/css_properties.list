{
   "Color":[
      {
         "property":"color",
         "description":"Sets the color of text"
      },
      {
         "property":"opacity",
         "description":"Sets the opacity level for an element"
      }
   ],
   "Background and Border":[
      {
         "property":"background",
         "description":"Sets all the background properties in one declaration"
      },
      {
         "property":"background-attachment",
         "description":"Sets whether a background image is fixed or scrolls with the rest of the page"
      },
      {
         "property":"background-color",
         "description":"Sets the background color of an element"
      },
      {
         "property":"background-image",
         "description":"Sets the background image for an element"
      },
      {
         "property":"background-position",
         "description":"Sets the starting position of a background image"
      },
      {
         "property":"background-repeat",
         "description":"Sets how a background image will be repeated"
      },
      {
         "property":"background-clip",
         "description":"Specifies the painting area of the background"
      },
      {
         "property":"background-origin",
         "description":"Specifies the positioning area of the background images"
      },
      {
         "property":"background-size",
         "description":"Specifies the size of the background images"
      },
      {
         "property":"border",
         "description":"Sets all the border properties in one declaration"
      },
      {
         "property":"border-bottom",
         "description":"Sets all the bottom border properties in one declaration"
      },
      {
         "property":"border-bottom-color",
         "description":"Sets the color of the bottom border"
      },
      {
         "property":"border-bottom-left-radius",
         "description":"Defines the shape of the border of the bottom-left corner"
      },
      {
         "property":"border-bottom-right-radius",
         "description":"Defines the shape of the border of the bottom-right corner"
      },
      {
         "property":"border-bottom-style",
         "description":"Sets the style of the bottom border"
      },
      {
         "property":"border-bottom-width",
         "description":"Sets the width of the bottom border"
      },
      {
         "property":"border-color",
         "description":"Sets the color of the four borders"
      },
      {
         "property":"border-image",
         "description":"A shorthand property for setting all the border-image-* properties"
      },
      {
         "property":"border-image-outset",
         "description":"Specifies the amount by which the border image area extends beyond the border box"
      },
      {
         "property":"border-image-repeat",
         "description":"Specifies whether the image-border should be repeated, rounded or stretched"
      },
      {
         "property":"border-image-slice",
         "description":"Specifies the inward offsets of the image-border"
      },
      {
         "property":"border-image-source",
         "description":"Specifies an image to be used as a border"
      },
      {
         "property":"border-image-width",
         "description":"Specifies the widths of the image-border"
      },
      {
         "property":"border-left",
         "description":"Sets all the left border properties in one declaration"
      },
      {
         "property":"border-left-color",
         "description":"Sets the color of the left border"
      },
      {
         "property":"border-left-style",
         "description":"Sets the style of the left border"
      },
      {
         "property":"border-left-width",
         "description":"Sets the width of the left border"
      },
      {
         "property":"border-radius",
         "description":"A shorthand property for setting all the four border-*-radius properties"
      },
      {
         "property":"border-right",
         "description":"Sets all the right border properties in one declaration"
      },
      {
         "property":"border-right-color",
         "description":"Sets the color of the right border"
      },
      {
         "property":"border-right-style",
         "description":"Sets the style of the right border"
      },
      {
         "property":"border-right-width",
         "description":"Sets the width of the right border"
      },
      {
         "property":"border-style",
         "description":"Sets the style of the four borders"
      },
      {
         "property":"border-top",
         "description":"Sets all the top border properties in one declaration"
      },
      {
         "property":"border-top-color",
         "description":"Sets the color of the top border"
      },
      {
         "property":"border-top-left-radius",
         "description":"Defines the shape of the border of the top-left corner"
      },
      {
         "property":"border-top-right-radius",
         "description":"Defines the shape of the border of the top-right corner"
      },
      {
         "property":"border-top-style",
         "description":"Sets the style of the top border"
      },
      {
         "property":"border-top-width",
         "description":"Sets the width of the top border"
      },
      {
         "property":"border-width",
         "description":"Sets the width of the four borders"
      },
      {
         "property":"box-decoration-break",
         "description":"Sets the behaviour of the background and border of an element at page-break, or, for  in-line elements, at line-break."
      },
      {
         "property":"box-shadow",
         "description":"Attaches one or more drop-shadows to the box"
      }
   ],
   "Basic Box":[
      {
         "property":"bottom",
         "description":"Specifies the bottom position of a positioned element"
      },
      {
         "property":"clear",
         "description":"Specifies which sides of an element where other floating elements are not allowed"
      },
      {
         "property":"clip",
         "description":"Clips an absolutely positioned element"
      },
      {
         "property":"display",
         "description":"Specifies how a certain HTML element should be displayed"
      },
      {
         "property":"float",
         "description":"Specifies whether or not a box should float"
      },
      {
         "property":"height",
         "description":"Sets the height of an element"
      },
      {
         "property":"left",
         "description":"Specifies the left position of a positioned element"
      },
      {
         "property":"overflow",
         "description":"Specifies what happens if content overflows an element's box"
      },
      {
         "property":"overflow-x",
         "description":"Specifies whether or not to clip the left/right edges of the content, if it overflows the element's content area"
      },
      {
         "property":"overflow-y",
         "description":"Specifies whether or not to clip the top/bottom edges of the content, if it overflows the element's content area"
      },
      {
         "property":"padding",
         "description":"Sets all the padding properties in one declaration"
      },
      {
         "property":"padding-bottom",
         "description":"Sets the bottom padding of an element"
      },
      {
         "property":"padding-left",
         "description":"Sets the left padding of an element"
      },
      {
         "property":"padding-right",
         "description":"Sets the right padding of an element"
      },
      {
         "property":"padding-top",
         "description":"Sets the top padding of an element"
      },
      {
         "property":"position",
         "description":"Specifies the type of positioning method used for an element (static, relative, absolute or fixed)"
      },
      {
         "property":"right",
         "description":"Specifies the right position of a positioned element"
      },
      {
         "property":"top",
         "description":"Specifies the top position of a positioned element"
      },
      {
         "property":"visibility",
         "description":"Specifies whether or not an element is visible"
      },
      {
         "property":"width",
         "description":"Sets the width of an element"
      },
      {
         "property":"vertical-align",
         "description":"Sets the vertical alignment of an element"
      },
      {
         "property":"z-index",
         "description":"Sets the stack order of a positioned element"
      }
   ],
   "Flexible Box":[
      {
         "property":"align-content",
         "description":"Specifies the alignment between the lines inside a flexible container when the items do not use all available space."
      },
      {
         "property":"align-items",
         "description":"Specifies the alignment for items inside a flexible container."
      },
      {
         "property":"align-self",
         "description":"Specifies the alignment for selected items inside a flexible container."
      },
      {
         "property":"display",
         "description":"Specifies how a certain HTML element should be displayed"
      },
      {
         "property":"flex",
         "description":"Specifies the length of the item, relative to the rest"
      },
      {
         "property":"flex-basis",
         "description":"Specifies the initial length of a flexible item"
      },
      {
         "property":"flex-direction",
         "description":"Specifies the direction of the flexible items"
      },
      {
         "property":"flex-flow",
         "description":"A shorthand property for the flex-direction and the flex-wrap properties"
      },
      {
         "property":"flex-grow",
         "description":"Specifies how much the item will grow relative to the rest"
      },
      {
         "property":"flex-shrink",
         "description":"Specifies how the item will shrink relative to the rest"
      },
      {
         "property":"flex-wrap",
         "description":"Specifies whether the flexible items should wrap or not"
      },
      {
         "property":"justify-content",
         "description":"Specifies the alignment between the items inside a flexible container when the items do not use all available space."
      },
      {
         "property":"margin",
         "description":"Sets all the margin properties in one declaration"
      },
      {
         "property":"margin-bottom",
         "description":"Sets the bottom margin of an element"
      },
      {
         "property":"margin-left",
         "description":"Sets the left margin of an element"
      },
      {
         "property":"margin-right",
         "description":"Sets the right margin of an element"
      },
      {
         "property":"margin-top",
         "description":"Sets the top margin of an element"
      },
      {
         "property":"max-height",
         "description":"Sets the maximum height of an element"
      },
      {
         "property":"max-width",
         "description":"Sets the maximum width of an element"
      },
      {
         "property":"min-height",
         "description":"Sets the minimum height of an element"
      },
      {
         "property":"min-width",
         "description":"Sets the minimum width of an element"
      },
      {
         "property":"order",
         "description":"Sets the order of the flexible item, relative to the rest"
      }
   ],
   "Text":[
      {
         "property":"hanging-punctuation",
         "description":"Specifies whether a punctuation character may be placed outside the line box"
      },
      {
         "property":"hyphens",
         "description":"Sets how to split words to improve the layout of paragraphs"
      },
      {
         "property":"letter-spacing",
         "description":"Increases or decreases the space between characters in a text"
      },
      {
         "property":"line-break",
         "description":"line-height Sets the line height"
      },
      {
         "property":"overflow-wrap",
         "description":"tab-size    Specifies the length of the tab-character"
      },
      {
         "property":"text-align",
         "description":"Specifies the horizontal alignment of text"
      },
      {
         "property":"text-align-last",
         "description":"Describes how the last line of a block or a line right before a forced line break is aligned when text-align is 'justify'"
      },
      {
         "property":"text-indent",
         "description":"Specifies the indentation of the first line in a text-block"
      },
      {
         "property":"text-justify",
         "description":"Specifies the justification method used when text-align is justify"
      },
      {
         "property":"text-transform",
         "description":"Controls the capitalization of text"
      },
      {
         "property":"white-space",
         "description":"Specifies how white-space inside an element is handled"
      },
      {
         "property":"word-break",
         "description":"Specifies line breaking rules for non-CJK scripts"
      },
      {
         "property":"word-spacing",
         "description":"Increases or decreases the space between words in a text"
      },
      {
         "property":"word-wrap",
         "description":"Allows long, unbreakable words to be broken and wrap to the next line"
      }
   ],
   "Text Decoration":[
      {
         "property":"text-decoration",
         "description":"Specifies the decoration added to text"
      },
      {
         "property":"text-decoration-color",
         "description":"Specyfies the color of the text-decoration"
      },
      {
         "property":"text-decoration-line",
         "description":"Specyfies the type of line in a text-decoration"
      },
      {
         "property":"text-decoration-style",
         "description":"Specifies the style of the line in a text decoration"
      },
      {
         "property":"text-shadow",
         "description":"Adds shadow to text"
      },
      {
         "property":"text-underline-position",
         "description":""
      }
   ],
   "Font":[
      {
         "property":"font",
         "description":"Sets all the font properties in one declaration"
      },
      {
         "property":"font-family",
         "description":"Specifies the font family for text"
      },
      {
         "property":"font-kerning",
         "description":"font-size   Specifies the font size of text"
      },
      {
         "property":"font-style",
         "description":"Specifies the font style for text"
      },
      {
         "property":"font-variant",
         "description":"Specifies whether or not a text should be displayed in a small-caps font"
      },
      {
         "property":"font-weight",
         "description":"Specifies the weight of a font"
      },
      {
         "property":"font-size-adjust",
         "description":"Preserves the readability of text when font fallback occurs"
      },
      {
         "property":"font-stretch",
         "description":"Selects a normal, condensed, or expanded face from a font family"
      }
   ],
   "Writing Modes":[
      {
         "property":"direction",
         "description":"Specifies the text direction/writing direction"
      },
      {
         "property":"text-orientation",
         "description":"text-combine-horizontal"
      },
      {
         "property":"writing-mode",
         "description":""
      }
   ],
   "Table":[
      {
         "property":"border-collapse",
         "description":"Specifies whether or not table borders should be collapsed"
      },
      {
         "property":"border-spacing",
         "description":"Specifies the distance between the borders of adjacent cells"
      },
      {
         "property":"caption-side",
         "description":"Specifies the placement of a table caption"
      },
      {
         "property":"empty-cells",
         "description":"Specifies whether or not to display borders and background on empty cells in a table"
      },
      {
         "property":"table-layout",
         "description":"Sets the layout algorithm to be used for a table"
      }
   ],
   "Lists and Counters":[
      {
         "property":"counter-increment",
         "description":"Increments one or more counters"
      },
      {
         "property":"counter-reset",
         "description":"Creates or resets one or more counters"
      },
      {
         "property":"list-style",
         "description":"Sets all the properties for a list in one declaration"
      },
      {
         "property":"list-style-image",
         "description":"Specifies an image as the list-item marker"
      },
      {
         "property":"list-style-position",
         "description":"Specifies if the list-item markers should appear inside or outside the content flow"
      },
      {
         "property":"list-style-type",
         "description":"Specifies the type of list-item marker"
      }
   ],
   "Animation":[
      {
         "property":"animation",
         "description":"A shorthand property for all the animation properties below, except the animation-play-state property"
      },
      {
         "property":"animation-delay",
         "description":"Specifies when the animation will start"
      },
      {
         "property":"animation-direction",
         "description":"Specifies whether or not the animation should play in reverse on alternate cycles"
      },
      {
         "property":"animation-duration",
         "description":"Specifies how many seconds or milliseconds an animation takes to complete one cycle"
      },
      {
         "property":"animation-fill-mode",
         "description":"Specifies what values are applied by the animation outside the time it is executing"
      },
      {
         "property":"animation-iteration-count",
         "description":"Specifies the number of times an animation should be played"
      },
      {
         "property":"animation-name",
         "description":"Specifies a name for the @keyframes animation"
      },
      {
         "property":"animation-timing-function",
         "description":"Specifies the speed curve of the animation"
      },
      {
         "property":"animation-play-state",
         "description":"Specifies whether the animation is running or paused"
      }
   ],
   "Transform":[
      {
         "property":"backface-visibility",
         "description":"Defines whether or not an element should be visible when not facing the screen"
      },
      {
         "property":"perspective",
         "description":"Specifies the perspective on how 3D elements are viewed"
      },
      {
         "property":"perspective-origin",
         "description":"Specifies the bottom position of 3D elements"
      },
      {
         "property":"transform",
         "description":"Applies a 2D or 3D transformation to an element"
      },
      {
         "property":"transform-origin",
         "description":"Allows you to change the position on transformed elements"
      },
      {
         "property":"transform-style",
         "description":"Specifies how nested elements are rendered in 3D space"
      }
   ],
   "Transition":[
      {
         "property":"transition",
         "description":"A shorthand property for setting the four transition properties"
      },
      {
         "property":"transition-property",
         "description":"Specifies the name of the CSS property the transition effect is for"
      },
      {
         "property":"transition-duration",
         "description":"Specifies how many seconds or milliseconds a transition effect takes to complete"
      },
      {
         "property":"transition-timing-function",
         "description":"Specifies the speed curve of the transition effect"
      },
      {
         "property":"transition-delay",
         "description":"Specifies when the transition effect will start"
      }
   ],
   "Basic User Interface":[
      {
         "property":"box-sizing",
         "description":"Allows you to define certain elements to fit an area in a certain way"
      },
      {
         "property":"content",
         "description":"Used with the :before and :after pseudo-elements, to insert generated content"
      },
      {
         "property":"cursor",
         "description":"Specifies the type of cursor to be displayed"
      },
      {
         "property":"icon",
         "description":"Provides the author the ability to style an element with an iconic equivalent"
      },
      {
         "property":"ime-mode",
         "description":"nav-down    Specifies where to navigate when using the arrow-down navigation key"
      },
      {
         "property":"nav-index",
         "description":"Specifies the tabbing order for an element"
      },
      {
         "property":"nav-left",
         "description":"Specifies where to navigate when using the arrow-left navigation key"
      },
      {
         "property":"nav-right",
         "description":"Specifies where to navigate when using the arrow-right navigation key"
      },
      {
         "property":"nav-up",
         "description":"Specifies where to navigate when using the arrow-up navigation key"
      },
      {
         "property":"outline",
         "description":"Sets all the outline properties in one declaration"
      },
      {
         "property":"outline-color",
         "description":"Sets the color of an outline"
      },
      {
         "property":"outline-offset",
         "description":"Offsets an outline, and draws it beyond the border edge"
      },
      {
         "property":"outline-style",
         "description":"Sets the style of an outline"
      },
      {
         "property":"outline-width",
         "description":"Sets the width of an outline"
      },
      {
         "property":"resize",
         "description":"Specifies whether or not an element is resizable by the user"
      },
      {
         "property":"text-overflow",
         "description":"Specifies what should happen when text overflows the containing element"
      }
   ],
   "Multi Column Layout":[
      {
         "property":"break-after",
         "description":"break-before"
      },
      {
         "property":"break-inside",
         "description":"column-count    Specifies the number of columns an element should be divided into"
      },
      {
         "property":"column-fill",
         "description":"Specifies how to fill columns"
      },
      {
         "property":"column-gap",
         "description":"Specifies the gap between the columns"
      },
      {
         "property":"column-rule",
         "description":"A shorthand property for setting all the column-rule-* properties"
      },
      {
         "property":"column-rule-color",
         "description":"Specifies the color of the rule between columns"
      },
      {
         "property":"column-rule-style",
         "description":"Specifies the style of the rule between columns"
      },
      {
         "property":"column-rule-width",
         "description":"Specifies the width of the rule between columns"
      },
      {
         "property":"column-span",
         "description":"Specifies how many columns an element should span across"
      },
      {
         "property":"column-width",
         "description":"Specifies the width of the columns"
      },
      {
         "property":"columns",
         "description":"A shorthand property for setting column-width and column-count"
      },
      {
         "property":"widows",
         "description":"Sets the minimum number of lines that must be left at the top of a page when a page break occurs inside an element"
      },
      {
         "property":"orphans",
         "description":"Sets the minimum number of lines that must be left at the bottom of a page when a page break occurs inside an element"
      }
   ],
   "Paged Media":[
      {
         "property":"page-break-after",
         "description":"Sets the page-breaking behavior after an element"
      },
      {
         "property":"page-break-before",
         "description":"Sets the page-breaking behavior before an element"
      },
      {
         "property":"page-break-inside",
         "description":"Sets the page-breaking behavior inside an element"
      }
   ],
   "Generated Content for Paged Media":[
      {
         "property":"marks",
         "description":"Adds crop and/or cross marks to the document"
      },
      {
         "property":"quotes",
         "description":"Sets the type of quotation marks for embedded quotations"
      }
   ],
   "Filter Effects":[
      {
         "property":"filter",
         "description":""
      }
   ],
   "Image Values and Replaced Content":[
      {
         "property":"image-orientation",
         "description":"Specifies a rotation in the right or clockwise direction that a user agent applies to an image"
      },
      {
         "property":"image-rendering",
         "description":"image-resolution"
      },
      {
         "property":"object-fit",
         "description":"object-position"
      }
   ],
   "Masking":[
      {
         "property":"mask",
         "description":"mask-type"
      }
   ],
   "Speech":[
      {
         "property":"mark",
         "description":"A shorthand property for setting the mark-before and mark-after properties"
      },
      {
         "property":"mark-after",
         "description":"Allows named markers to be attached to the audio stream"
      },
      {
         "property":"mark-before",
         "description":"Allows named markers to be attached to the audio stream"
      },
      {
         "property":"phonemes",
         "description":"Specifies a phonetic pronunciation for the text contained by the corresponding element"
      },
      {
         "property":"rest",
         "description":"A shorthand property for setting the rest-before and rest-after properties"
      },
      {
         "property":"rest-after",
         "description":"Specifies a rest or prosodic boundary to be observed after speaking an element's content"
      },
      {
         "property":"rest-before",
         "description":"Specifies a rest or prosodic boundary to be observed before speaking an element's content"
      },
      {
         "property":"voice-balance",
         "description":"Specifies the balance between left and right channels"
      },
      {
         "property":"voice-duration",
         "description":"Specifies how long it should take to render the selected element's content"
      },
      {
         "property":"voice-pitch",
         "description":"Specifies the average pitch (a frequency) of the speaking voice"
      },
      {
         "property":"voice-pitch-range",
         "description":"Specifies variation in average pitch"
      },
      {
         "property":"voice-rate",
         "description":"Controls the speaking rate"
      },
      {
         "property":"voice-stress",
         "description":"Indicates the strength of emphasis to be applied"
      },
      {
         "property":"voice-volume",
         "description":"Refers to the amplitude of the waveform output by the speech synthesises"
      }
   ],
   "Marquee":[
      {
         "property":"marquee-direction",
         "description":"Sets the direction of the moving content"
      },
      {
         "property":"marquee-play-count",
         "description":"Sets how many times the content move"
      },
      {
         "property":"marquee-speed",
         "description":"Sets how fast the content scrolls"
      },
      {
         "property":"marquee-style",
         "description":"Sets the style of the moving content"
      }
   ]
}